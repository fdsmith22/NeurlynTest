{
  "name": "neurlyn",
  "version": "1.0.0",
  "description": "Neurlyn - Intelligent Personality Assessment Platform",
  "main": "backend.js",
  "scripts": {
    "start": "node backend.js",
    "dev": "nodemon backend.js",
    "dev:clean": "./dev.sh clean",
    "dev:backend": "./dev.sh start backend",
    "dev:frontend": "./dev.sh start frontend",
    "dev:full": "./dev.sh start full",
    "dev:status": "./dev.sh status",
    "dev:browser-sync": "concurrently \"npm run start\" \"browser-sync start --config bs-config.js\"",
    "dev:with-logging": "concurrently \"npm run start\" \"node console-logger.js\" \"python3 -m http.server 8080\"",
    "logs:tail": "tail -f console.log",
    "logs:clear": "rm -f console.log && echo 'Console logs cleared'",
    "check:ports": "lsof -i :3000,3001,3002,8000,8080 | grep LISTEN || echo 'All ports are free'",
    "check:requirements": "node scripts/check-requirements.js",
    "build": "webpack --config webpack.config.optimized.js --mode production",
    "build:dev": "webpack --config webpack.config.optimized.js --mode development",
    "build:analyze": "ANALYZE=true webpack --config webpack.config.optimized.js --mode production",
    "serve": "webpack serve --config webpack.config.optimized.js --mode development",
    "test": "jest tests/unit tests/integration",
    "test:e2e": "playwright test",
    "test:e2e:critical": "playwright test --config=playwright.config.critical.js",
    "test:e2e:ci": "playwright test --config=playwright.config.ci.js",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint . --ext .js,.ts,.jsx,.tsx --ignore-pattern 'playwright-report/**' --ignore-pattern 'test-results/**' --ignore-pattern 'coverage/**'",
    "lint:fix": "eslint . --ext .js,.ts,.jsx,.tsx --fix --ignore-pattern 'playwright-report/**' --ignore-pattern 'test-results/**' --ignore-pattern 'coverage/**'",
    "format": "prettier --write \"**/*.{js,ts,jsx,tsx,json,css,md}\"",
    "format:check": "prettier --check \"**/*.{js,ts,jsx,tsx,json,css,md}\"",
    "typecheck": "tsc --noEmit || echo 'No TypeScript files to check'",
    "precommit": "npm run lint && npm run format:check && npm run test",
    "check": "./scripts/dev-check.sh",
    "fix": "./scripts/quick-fix.sh",
    "check:all": "npm run lint && npm run format:check && npm run typecheck && npm test",
    "e2e": "playwright test",
    "e2e:ui": "playwright test --ui",
    "e2e:debug": "playwright test --debug",
    "e2e:headed": "playwright test --headed",
    "e2e:report": "playwright show-report",
    "e2e:codegen": "playwright codegen http://localhost:8080",
    "e2e:update-snapshots": "playwright test --update-snapshots",
    "monitor": "node monitoring/performance-monitor.js",
    "monitor:errors": "node monitoring/error-tracker.js",
    "monitor:dashboard": "open monitoring-dashboard.html || xdg-open monitoring-dashboard.html || start monitoring-dashboard.html",
    "monitor:all": "npm run monitor & npm run monitor:errors",
    "deploy": "npm run build && pm2 start ecosystem.config.js",
    "seed": "node scripts/seed-complete-database.js",
    "seed:full": "node scripts/seed-complete-database.js",
    "seed:legacy": "node scripts/seed-master-questions.js && node scripts/seed-complete-expanded-questions.js",
    "seed:master": "node scripts/seed-master-questions.js",
    "seed:expanded": "node scripts/seed-complete-expanded-questions.js",
    "db:clean": "node -e \"const mongoose = require('mongoose'); const QuestionBank = require('./models/QuestionBank'); require('dotenv').config(); mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/neurlyn').then(() => QuestionBank.deleteMany({})).then(r => { console.log('Deleted', r.deletedCount, 'questions'); process.exit(0); }).catch(e => { console.error(e); process.exit(1); });\"",
    "verify": "node scripts/verify-setup.js",
    "test:api": "node scripts/test-assessment-variations.js",
    "export:questions": "node scripts/export-all-questions.js",
    "view:questions": "cat exports/questions.md"
  },
  "dependencies": {
    "@tensorflow/tfjs": "^4.22.0",
    "axios": "^1.12.2",
    "bcryptjs": "^2.4.3",
    "compromise": "^14.14.4",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "dotenv-safe": "^9.1.0",
    "express": "^4.18.2",
    "express-rate-limit": "^7.1.5",
    "helmet": "^7.1.0",
    "joi": "^18.0.1",
    "jsonwebtoken": "^9.0.2",
    "ml-kmeans": "^6.0.0",
    "mongoose": "^8.0.3",
    "natural": "^6.12.0",
    "puppeteer": "^24.22.2",
    "sentiment": "^5.0.2",
    "simple-statistics": "^7.8.8",
    "stripe": "^14.5.0",
    "webgazer": "^3.4.0",
    "winston": "^3.17.0"
  },
  "devDependencies": {
    "@babel/core": "^7.23.5",
    "@babel/preset-env": "^7.23.5",
    "@babel/preset-typescript": "^7.27.1",
    "@eslint/js": "^9.35.0",
    "@playwright/test": "^1.55.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/cors": "^2.8.19",
    "@types/eslint": "^9.6.1",
    "@types/express": "^4.17.23",
    "@types/jest": "^30.0.0",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/node": "^24.5.1",
    "@types/supertest": "^6.0.3",
    "autoprefixer": "^10.4.21",
    "babel-jest": "^30.1.2",
    "babel-loader": "^9.1.3",
    "browser-sync": "^3.0.4",
    "bundle-analyzer": "^0.0.6",
    "compression-webpack-plugin": "^11.1.0",
    "concurrently": "^9.2.1",
    "copy-webpack-plugin": "^13.0.1",
    "css-loader": "^6.8.1",
    "eslint": "^9.35.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "html-webpack-plugin": "^5.5.3",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "mini-css-extract-plugin": "^2.7.6",
    "nodemon": "^3.1.10",
    "playwright": "^1.55.0",
    "postcss-combine-media-query": "^2.0.0",
    "postcss-preset-env": "^10.4.0",
    "prettier": "^3.6.2",
    "sharp": "^0.34.3",
    "style-loader": "^3.3.3",
    "supertest": "^7.1.4",
    "terser-webpack-plugin": "^5.3.14",
    "ts-jest": "^29.4.2",
    "typescript": "^5.9.2",
    "wait-on": "^9.0.1",
    "webpack": "^5.89.0",
    "webpack-bundle-analyzer": "^4.10.2",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^5.2.2"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
