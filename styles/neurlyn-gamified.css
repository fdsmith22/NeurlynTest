/* ============================================
   Neurlyn - Gamified Tasks & Enhanced UI Styles
   ============================================ */

/* Task Type Selector */
.task-type-selector {
    margin-top: var(--space-6);
    padding: var(--space-4);
    background: var(--off-white);
    border-radius: var(--radius-lg);
    border: 1px solid var(--border-color);
}

.task-type-selector h4 {
    font-size: var(--text-base);
    font-weight: var(--font-semibold);
    color: var(--gray-700);
    margin-bottom: var(--space-3);
}

.task-type-options {
    display: flex;
    gap: var(--space-3);
    flex-wrap: wrap;
}

.task-type-option {
    flex: 1;
    min-width: 150px;
    position: relative;
    cursor: pointer;
}

.task-type-option input[type="radio"],
.task-type-option input[type="checkbox"] {
    position: absolute;
    opacity: 0;
}

.task-type-option {
    display: block;
    padding: var(--space-3);
    background: var(--white);
    border: 2px solid var(--border-color);
    border-radius: var(--radius-md);
    transition: all var(--transition-base);
    text-align: center;
}

.task-type-option .option-content {
    display: block;
}

.task-type-option .option-title {
    display: block;
    font-size: var(--text-base);
    font-weight: var(--font-semibold);
    color: var(--gray-800);
    margin-bottom: var(--space-1);
}

.task-type-option .option-desc {
    display: block;
    font-size: var(--text-xs);
    color: var(--gray-600);
}

.task-type-option input:checked ~ .option-content,
.task-type-option.selected .option-content {
    color: white !important;
}

.task-type-option input:checked ~ .option-content .option-title,
.task-type-option.selected .option-title {
    color: white !important;
    font-weight: var(--font-bold) !important;
}

.task-type-option input:checked ~ .option-content .option-desc,
.task-type-option.selected .option-desc {
    color: rgba(255, 255, 255, 0.9) !important;
}

/* Add checkmark for selected state */
.task-type-option input:checked ~ .option-check::after,
.task-type-option.selected .option-check::after {
    content: 'âœ“';
    color: white;
    font-size: 1.2rem;
    font-weight: bold;
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
}

/* Fallback for browsers that don't support :has */
.task-type-option.selected {
    background: var(--sage-500) !important;
    border-color: var(--sage-700) !important;
    box-shadow: 0 0 0 3px rgba(108, 158, 131, 0.2) !important;
    transform: translateY(-2px);
}

/* Modern browsers with :has support */
.task-type-option:has(input:checked) {
    background: var(--sage-500) !important;
    border-color: var(--sage-700) !important;
    box-shadow: 0 0 0 3px rgba(108, 158, 131, 0.2) !important;
    transform: translateY(-2px);
}

.task-type-option:hover {
    border-color: var(--sage-300);
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
}

/* Task Container */
.task-container {
    animation: fadeIn 0.3s ease;
}

.task-content {
    padding: var(--space-4);
}

.task-instructions {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    padding: var(--space-3);
    background: var(--sage-50);
    border-left: 3px solid var(--sage-500);
    border-radius: var(--radius-md);
    margin-bottom: var(--space-4);
}

.task-instructions .instruction-icon {
    flex-shrink: 0;
    color: var(--sage-600);
}

.task-instructions p {
    margin: 0;
    color: var(--gray-700);
    font-size: var(--text-sm);
}

.task-question {
    font-size: var(--text-xl);
    font-weight: var(--font-semibold);
    color: var(--gray-800);
    margin-bottom: var(--space-4);
    text-align: center;
}

/* Task Timer */
.task-timer {
    position: absolute;
    top: var(--space-4);
    right: var(--space-4);
    display: flex;
    align-items: center;
    gap: var(--space-2);
    padding: var(--space-2) var(--space-3);
    background: var(--white);
    border: 1px solid var(--border-color);
    border-radius: var(--radius-full);
    font-size: var(--text-sm);
    font-weight: var(--font-medium);
}

.task-timer.timer-warning {
    background: var(--red-50);
    border-color: var(--red-300);
    color: var(--red-700);
    animation: pulse 1s infinite;
}

/* Confidence Indicator */
.confidence-indicator {
    margin: var(--space-4) 0;
}

.confidence-indicator span {
    display: block;
    font-size: var(--text-sm);
    color: var(--gray-600);
    margin-bottom: var(--space-2);
}

.confidence-bar {
    height: 8px;
    background: var(--gray-200);
    border-radius: var(--radius-full);
    overflow: hidden;
}

.confidence-fill {
    height: 100%;
    background: linear-gradient(90deg, var(--sage-400) 0%, var(--sage-600) 100%);
    transition: width 0.5s ease;
}

/* Behavioral Insights */
.behavioral-insights,
.gamified-insights {
    margin-top: var(--space-6);
}

.behavioral-insights h4,
.gamified-insights h4 {
    font-size: var(--text-lg);
    font-weight: var(--font-semibold);
    color: var(--gray-800);
    margin-bottom: var(--space-4);
}

.insight-card {
    padding: var(--space-4);
    background: var(--white);
    border: 1px solid var(--border-color);
    border-radius: var(--radius-lg);
    margin-bottom: var(--space-3);
    transition: all var(--transition-base);
    position: relative;
    overflow: hidden;
}

.insight-card::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 4px;
    background: linear-gradient(180deg, var(--sage-400) 0%, var(--sage-600) 100%);
}

.insight-card h5 {
    font-size: var(--text-base);
    font-weight: var(--font-semibold);
    color: var(--sage-700);
    margin-bottom: var(--space-2);
}

.insight-card p {
    font-size: var(--text-sm);
    color: var(--gray-600);
    margin: 0;
}

.insight-card:hover {
    transform: translateX(4px);
    box-shadow: var(--shadow-md);
}

/* Recommendation Cards */
.recommendations-section {
    margin-top: var(--space-6);
}

.recommendations-section h4 {
    font-size: var(--text-lg);
    font-weight: var(--font-semibold);
    color: var(--gray-800);
    margin-bottom: var(--space-4);
}

.recommendation-card {
    padding: var(--space-3);
    background: var(--off-white);
    border-radius: var(--radius-md);
    margin-bottom: var(--space-2);
    transition: all var(--transition-base);
    cursor: pointer;
    position: relative;
}

.recommendation-card strong {
    color: var(--sage-600);
    font-weight: var(--font-semibold);
}

.recommendation-card.expanded {
    background: var(--white);
    box-shadow: var(--shadow-md);
    padding: var(--space-4);
}

/* Task-specific animations */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes slideIn {
    from {
        transform: translateX(-20px);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes pulse {
    0%, 100% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.05);
    }
}

/* Enhanced trait visualization */
.trait-results {
    margin: var(--space-6) 0;
}

.trait-item {
    margin-bottom: var(--space-4);
}

.trait-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-2);
}

.trait-name {
    font-size: var(--text-base);
    font-weight: var(--font-medium);
    color: var(--gray-700);
}

.trait-score {
    font-size: var(--text-lg);
    font-weight: var(--font-semibold);
    color: var(--sage-600);
}

.trait-bar {
    height: 24px;
    background: var(--gray-100);
    border-radius: var(--radius-full);
    overflow: hidden;
    position: relative;
}

.trait-fill {
    height: 100%;
    transition: width 0.8s ease;
    position: relative;
    overflow: hidden;
}

.trait-fill::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, 
        rgba(255, 255, 255, 0) 0%,
        rgba(255, 255, 255, 0.3) 50%,
        rgba(255, 255, 255, 0) 100%
    );
    animation: shimmer 2s infinite;
}

@keyframes shimmer {
    0% {
        transform: translateX(-100%);
    }
    100% {
        transform: translateX(100%);
    }
}

/* Archetype Section */
.archetype-section {
    margin-top: var(--space-6);
}

.archetype-section h4 {
    font-size: var(--text-lg);
    font-weight: var(--font-semibold);
    color: var(--gray-800);
    margin-bottom: var(--space-4);
}

.archetype-card {
    padding: var(--space-6);
    background: linear-gradient(135deg, var(--sage-50) 0%, var(--white) 100%);
    border: 2px solid var(--sage-200);
    border-radius: var(--radius-xl);
    text-align: center;
    position: relative;
    overflow: hidden;
}

.archetype-card::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, var(--sage-100) 0%, transparent 70%);
    opacity: 0.5;
}

.archetype-card h5 {
    font-size: var(--text-2xl);
    font-weight: var(--font-bold);
    color: var(--sage-700);
    margin-bottom: var(--space-3);
    position: relative;
}

.archetype-card p {
    font-size: var(--text-base);
    color: var(--gray-600);
    line-height: 1.6;
    position: relative;
}


/* Loading states */
.task-loading {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 300px;
}

.task-loading-spinner {
    width: 48px;
    height: 48px;
    border: 4px solid var(--gray-200);
    border-top-color: var(--sage-500);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

.task-loading-text {
    margin-top: var(--space-4);
    color: var(--gray-600);
    font-size: var(--text-sm);
}

/* Responsive styles moved to neurlyn-mobile.css */

/* Print styles */
@media print {
    .task-type-selector,
    .task-timer,
    .confidence-indicator {
        display: none;
    }
    
    .insight-card,
    .recommendation-card {
        break-inside: avoid;
    }
}